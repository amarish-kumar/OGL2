@model Repozytorium.Models.Views.OgloszenieEditViewModel

@{
    ViewBag.Tytul = "Edytujesz ogłoszenie nr " + @Model.IdOgloszenia;
    ViewBag.Opis = "Edytujesz ogłoszenie nr " + @Model.IdOgloszenia;
    ViewBag.SlowaKluczowe = "Edytujesz ogłoszenie nr " + @Model.IdOgloszenia;
}

<h2>Dodajesz nowe ogłoszenie.</h2>

@if (ViewBag.Blad == true)
{
    <div class="alert alert-danger" role="alert">
        Wystąpił błąd podczas dodawania.<br />
        Wypełnij poprawnie formularz i spróbuj ponownie.
    </div>
}
else if (ViewBag.Blad == false)
{
    <div class="alert alert-success" role="alert">
        Pomyślnie dodano.
        Twoje ogłoszenie wygląda teraz następująco:
    </div>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(m => m.UzytkownikId)

    <div class="form-horizontal">
        <h4></h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @*<div class="form-group">
            @Html.LabelFor(model => model.Firma, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Firma, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Firma, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Tytul, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Tytul, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Tytul, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tresc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Tresc, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Tresc, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MiastoId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="kategoriaSelect" id="listbox" class="form-control">
                    <option selected value="0"> -- wybierz kategorię -- </option>
                    @foreach (var item in Model.Kategorie)
                    {
                        <option value="@item.Id">
                            @item.Nazwa
                        </option>
                    }
                </select>
                @Html.ValidationMessageFor(model => model.MiastoId, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.MiastoId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="miastoSelect" id="listbox" class="form-control">
                    <option selected value="0"> -- wybierz miasto -- </option>
                    @foreach (var item in Model.Miasta)
                    {
                        <option value="@item.Id">
                            @item.Nazwa
                        </option>
                    }
                </select>
                @Html.ValidationMessageFor(model => model.MiastoId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RodzajUmowyId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="rodzajUmowySelect" id="listbox" class="form-control">
                    <option selected value="0"> -- wybierz rodzaj umowy -- </option>
                    @foreach (var item in Model.RodzajeUmowy)
                    {
                        <option value="@item.Id">
                            @item.Nazwa
                        </option>
                    }
                </select>
                @Html.ValidationMessageFor(model => model.RodzajUmowyId, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.ZarobkiOd, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ZarobkiOd, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ZarobkiOd, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ZarobkiDo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ZarobkiDo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ZarobkiDo, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (User.Identity.IsAuthenticated && (User.IsInRole("Admin")))
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Zaakceptowane, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.CheckBoxFor(model => model.Zaakceptowane)
                    @Html.ValidationMessageFor(model => model.Zaakceptowane, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        @Html.HiddenFor(m => m.DataDodania)
        @Html.HiddenFor(m => m.UzytkownikId)

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Opublikuj" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Wróć", "Index", null, new { @class = "btn btn-warning" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
