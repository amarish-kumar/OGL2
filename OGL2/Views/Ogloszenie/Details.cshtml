@model Repozytorium.Models.Views.OgloszenieDetailsViewModel
@using Microsoft.AspNet.Identity

@{
    ViewBag.Tytul = "Szczegóły ogłoszenia nr " + Model.IdOgloszenia;
    ViewBag.Opis = "Szczegóły ogłoszenia nr" + Model.IdOgloszenia + " Opis do Google";
    ViewBag.SlowaKluczowe = "Ogloszenie, " + Model.IdOgloszenia + ",szczegóły";
}

<h2>Szczegóły ogłoszenia nr @Model.IdOgloszenia</h2>

@if (ViewBag.Blad == true)
{
    <div class="alert alert-danger" role="alert">
        Wystąpił błąd podczas wysyłania.<br />
        Spróbuj ponownie.
    </div>
}
else if (ViewBag.Blad == false)
{
    <div class="alert alert-success" role="alert">
        Pomyślnie wysłano wiadomość!
    </div>
}

<div>
    <h4></h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Tytul)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Tytul)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Firma)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Firma)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Miasto)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Miasto)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.RodzajUmowy)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.RodzajUmowy)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.GetEarningsFrom)
        </dt>

        <dd>
            @String.Concat(Html.DisplayFor(model => model.GetEarningsFrom), " zł")
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.GetEarningsTo)
        </dt>

        <dd>
            @String.Concat(Html.DisplayFor(model => model.GetEarningsTo), " zł")
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Tresc)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Tresc)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DataDodania)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.GetFormattedDateAdd)
        </dd>
@if (User.Identity.IsAuthenticated)
{
        <dt>
            <br />
            <br />
            Odpowiedź
        </dt>
        using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
                <dd>
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.UzytkownikId)
                    @Html.HiddenFor(model => model.IdOgloszenia)
                    <br />
                    <br />
                    <input  name="tresc" id="tresc" style="width: 100%; max-width: 100%; padding: 0 0 100px 0; "  /> 
                    <br />
                    <input type="submit" value="Wyślij" class="btn btn-success" />
                </dd>
        }
}
    </dl>
</div>
<p>
    @if (User.Identity.IsAuthenticated && (User.IsInRole("Admin") 
        || User.IsInRole("Pracownik") 
        || Model.UzytkownikId == User.Identity.GetUserId())) 
    {
        @*@Html.ActionLink("Edytuj", "Edit", new { id = Model.IdOgloszenia }, new { @class = "btn btn-primary" })*@
    }
    @Html.ActionLink("Wróć", "Index", null, new { @class = "btn btn-warning" })
</p>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


